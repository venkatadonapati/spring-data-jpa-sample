plugins {
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'com.jfrog.artifactory' version '5.1.10'
}

group = 'com.vdonapa'
version = '0.0.1-SNAPSHOT'

//repositories {
//	mavenCentral()
//}
repositories {
	maven{
		url "https://lzb.jfrog.io/artifactory/spring-remote-test"
		credentials{
			username "${artifactory_user}"
			password "${artifactory_password}"
		}
	}
}
dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	implementation 'com.h2database:h2:2.2.222'
	implementation 'mysql:mysql-connector-java:8.0.27'
	implementation 'org.flywaydb:flyway-core:10.8.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            from components.java
//        }
//    }
//}
//
//artifactory {
//    contextUrl = 'https://lzb.jfrog.io/artifactory/'
//    publish {
//        repository {
//            repoKey = 'local-test' // The Artifactory repository key to publish to
//            username = "${artifactory_user}" // The publisher user name
//            password = "${artifactory_password}" // The publisher password
//        }
//        defaults {
//            // Reference to Gradle publications defined in the build script.
//            // This is how we tell the Artifactory Plugin which artifacts should be
//            // published to Artifactory.
//            publications('mavenJava')
//            publishArtifacts = true
//            // Properties to be attached to the published artifacts.
//            //properties = ['qa.level': 'basic', 'dev.team' : 'core']
//            // Publish generated POM files to Artifactory (true by default)
//            publishPom = true
//        }
//    }
//}

//task buildImage(type: Exec) {
//	dependsOn bootJar
//	commandLine 'pack', 'build', 'rms-document:latest', '--path', project.buildDir.toPath().resolve('libs').toString(), '--builder', 'paketobuildpacks/builder-jammy-base:latest'
//	//, '--env', 'BP_JVM_VERSION=11'
//}
//task wrapper(type: Wrapper) {
//	gradleVersion = '7.0' // Replace X.Y.Z with the desired Gradle version
//}

test {
	useJUnitPlatform()
}
